#서버의 포트 설정
server.port=80

#접속할 데이터베이스 정보 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#만약에 오라클이라면 
#spring.datasource.driver-class-name=oracle.jdbc.friver.OracleDriver

spring.datasource.url=jdbc:mysql://localhost:3306/joy?useUnicode=yes&characterEncoding=UTF-8&serverTimezone=UTC
#만약에 오라클이라면 
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

	
spring.datasource.username=root
spring.datasource.password=1004

#하이버네이트 설정 - 하지 않아도 된다

#jpa 연동할 때 SQL을 로그로 출력하도록 설정
spring.jpa.properties.hibernate.show_sql=true
#SQL을 정리해서 출력
spring.jpa.properties.hibernate.format_sql=true
#DDL 문장 수행 여부 - 실무에서는 false 그런데 update를 쓰면 자동으로 다 해준다
#실무에서는 테이블 관련 작업은 자동으로 하지 않고 직접 수행한다
spring.jpa.hibernate.ddl-auto=update
#바인딩 된 값을 확인
logging.level.org.hibernate.type.descriptor.sql=trace

#Live Reload - 코드를 수정하면 자공으로 재시작
#개발환경에서는 사용하지만 운영환경에서는 사용하지 않는다
spring.devtools.livereload.enabled=true